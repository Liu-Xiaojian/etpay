/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package io.etwallet.etpay;

import static javax.swing.JOptionPane.ERROR_MESSAGE;

import java.math.BigDecimal;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

import io.etwallet.etpay.pojo.CoinType;
import io.etwallet.etpay.service.CollectsAssetService;
import io.etwallet.etpay.utils.EthUtils;
import lombok.extern.slf4j.Slf4j;

/**
 *
 * @author abill
 */
@Slf4j
public class Main extends javax.swing.JFrame {
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mnemonicCodeText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        addressIndexStartText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        addressIndexEndText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        excuteLogTextArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        toAddressText = new javax.swing.JTextField();
        coinTypeText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        decimalText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        addresstext = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        addressGIndexText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        minQtyText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("etPay资产归集工具");
        setAlwaysOnTop(true);
        setResizable(false);

        jLabel1.setText("Coin Type：");

        jLabel2.setText("助记词：");

        mnemonicCodeText.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel3.setText("资产归集");

        addressIndexStartText.setText("1");
        addressIndexStartText.setToolTipText("");

        jLabel4.setText("地址开始序号：");

        jLabel5.setText("地址结束序号：");

        addressIndexEndText.setText("10000");
        addressIndexEndText.setToolTipText("");

        jButton1.setText("开始归集");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        excuteLogTextArea.setEditable(false);
        excuteLogTextArea.setColumns(20);
        excuteLogTextArea.setRows(5);
        jScrollPane2.setViewportView(excuteLogTextArea);

        jLabel6.setText("归集到的地址：");

        toAddressText.setText("0x2b496DE7c23BFAAF6076D0914Ce67A0691c93fc9");
        toAddressText.setToolTipText("");

        coinTypeText.setText("ETH_USDT_0xdac17f958d2ee523a2206206994597c13d831ec7");

        jLabel7.setText("精度：");

        decimalText.setText("6");
        decimalText.setToolTipText("");

        jLabel8.setText("序号:");

        addresstext.setEditable(false);

        jButton2.setText("获取地址");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        addressGIndexText.setText("0");

        jLabel9.setText("地址：");

        jLabel10.setForeground(new java.awt.Color(204, 51, 0));
        jLabel10.setText("温馨提示：请为序号为0的地址充足够的ETH用于归集时的矿工费");

        jButton3.setText("转矿工费到满足币地址");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(204, 51, 0));
        jLabel11.setText("0地址转入矿工费后，点击转入矿工费，完成后请等待10分钟左右再做归集，以便矿工费确认");

        jLabel12.setText("归集最小数量");

        minQtyText.setText("1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addressGIndexText, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                                .addComponent(addresstext, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(28, 28, 28))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(coinTypeText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mnemonicCodeText, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(addressIndexStartText, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                                            .addComponent(decimalText, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                                            .addComponent(addressIndexEndText, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                                            .addComponent(toAddressText, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                                            .addComponent(jLabel9)
                                            .addComponent(minQtyText)))))
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jButton3)
                        .addGap(86, 86, 86)
                        .addComponent(jButton1)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mnemonicCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(coinTypeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(decimalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressIndexStartText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressIndexEndText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(minQtyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(addresstext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(addressGIndexText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String coinTypeName = coinTypeText.getText();
        String mnemonicCode = mnemonicCodeText.getText();
        String addressIndexStartS = addressIndexStartText.getText();
        String addressIndexEndS = addressIndexEndText.getText();
        String toAddress = toAddressText.getText();
        String decimal = decimalText.getText();
        String minQtyString = minQtyText.getText();
        if (coinTypeName.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Coin Type不能为空", "错误", ERROR_MESSAGE);
            return;
        }
        if (mnemonicCode.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "助记词不能为空", "错误", ERROR_MESSAGE);
            return;
        }
        if (addressIndexStartS.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "地址开始序号不能为空", "错误", ERROR_MESSAGE);
            return;
        }
        if (addressIndexEndS.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "地址结束序号不能为空", "错误", ERROR_MESSAGE);
            return;
        }
        BigDecimal minQty = BigDecimal.ZERO;
        if (!minQtyString.isEmpty()) {
            minQty = new BigDecimal(minQtyString);
        }
        excuteLogTextArea.setText("开始归集资产...\r\n");
        jButton1.setEnabled(false);
        try {
            String[] coinTypeArray = coinTypeName.split("_");
            String contract = "";
            if (null != coinTypeArray && coinTypeArray.length == 3) {
                contract = coinTypeArray[2];
            }
            CoinType coinType = new CoinType(coinTypeName, contract, Integer.parseInt(decimal));
            CollectsAssetService collectsAssetService = new CollectsAssetService();
            int addressIndexStart = Integer.parseInt(addressIndexStartS);
            int addressIndexEnd = Integer.parseInt(addressIndexEndS);
            for (int i = addressIndexStart; i <= addressIndexEnd; i++) {
                try {
                    collectsAssetService.collects(mnemonicCode, i, coinType, toAddress, minQty);
                    excuteLogTextArea.append("地址序号为：" + i + "归集成功.\r\n");
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    excuteLogTextArea.append("地址序号为：" + i + "归集失败.失败原因：" + ex.getMessage() + ".\r\n");
                }
            }
            excuteLogTextArea.append("归集资产结束.\r\n");
            JOptionPane.showMessageDialog(rootPane, "归集完成");
        } catch (Exception e) {
            excuteLogTextArea.append("归集资产发生异常：" + e.getMessage() + ".\r\n");
            JOptionPane.showMessageDialog(rootPane, "归集资产发生异常：" + e.getMessage() + ".\r\n");
        } finally {
            jButton1.setEnabled(true);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String mnemonicCode = mnemonicCodeText.getText();
        if (mnemonicCode.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "助记词不能为空", "错误", ERROR_MESSAGE);
            return;
        }
        String addressGIndexStr = addressGIndexText.getText();
        int addressIndexG = Integer.parseInt(addressGIndexStr);
        String address = EthUtils.getAddress(mnemonicCode, 0, addressIndexG);
        addresstext.setText(address);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String coinTypeName = coinTypeText.getText();
        String mnemonicCode = mnemonicCodeText.getText();
        String addressIndexStartS = addressIndexStartText.getText();
        String addressIndexEndS = addressIndexEndText.getText();
        String toAddress = toAddressText.getText();
        String decimal = decimalText.getText();
        String minQtyString = minQtyText.getText();
        if (coinTypeName.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Coin Type不能为空", "错误", ERROR_MESSAGE);
            return;
        }
        if (mnemonicCode.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "助记词不能为空", "错误", ERROR_MESSAGE);
            return;
        }
        if (addressIndexStartS.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "地址开始序号不能为空", "错误", ERROR_MESSAGE);
            return;
        }
        if (addressIndexEndS.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "地址结束序号不能为空", "错误", ERROR_MESSAGE);
            return;
        }
        if(coinTypeName .equalsIgnoreCase("ETH") || coinTypeName.equalsIgnoreCase("BTC")){
             JOptionPane.showMessageDialog(rootPane, coinTypeName+"无需打入矿工费", "错误", ERROR_MESSAGE);
        }
        BigDecimal minQty = BigDecimal.ZERO;
        if (!minQtyString.isEmpty()) {
            minQty = new BigDecimal(minQtyString);
        }
        excuteLogTextArea.setText("开始转矿工费...\r\n");
        jButton1.setEnabled(false);
        jButton3.setEnabled(false);
        try {
            String[] coinTypeArray = coinTypeName.split("_");
            String contract = "";
            if (null != coinTypeArray && coinTypeArray.length == 3) {
                contract = coinTypeArray[2];
            }
            CoinType coinType = new CoinType(coinTypeName, contract, Integer.parseInt(decimal));
            CollectsAssetService collectsAssetService = new CollectsAssetService();
            int addressIndexStart = Integer.parseInt(addressIndexStartS);
            int addressIndexEnd = Integer.parseInt(addressIndexEndS);
            for (int i = addressIndexStart; i <= addressIndexEnd; i++) {
                try {
                    collectsAssetService.transferFee(mnemonicCode, i, coinType, toAddress, minQty);
                    excuteLogTextArea.append("地址序号为：" + i + "转矿工费成功.\r\n");
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    excuteLogTextArea.append("地址序号为：" + i + "转矿工费失败.失败原因：" + ex.getMessage() + ".\r\n");
                }
            }
            excuteLogTextArea.append("转矿工费结束.\r\n");
            JOptionPane.showMessageDialog(rootPane, "转矿工费完成");
        } catch (Exception e) {
            excuteLogTextArea.append("转矿工费发生异常：" + e.getMessage() + ".\r\n");
            JOptionPane.showMessageDialog(rootPane, "转矿工费发生异常：" + e.getMessage() + ".\r\n");
        } finally {
            jButton1.setEnabled(true);
            jButton3.setEnabled(true);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressGIndexText;
    private javax.swing.JTextField addressIndexEndText;
    private javax.swing.JTextField addressIndexStartText;
    private javax.swing.JTextField addresstext;
    private javax.swing.JTextField coinTypeText;
    private javax.swing.JTextField decimalText;
    private javax.swing.JTextArea excuteLogTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField minQtyText;
    private javax.swing.JTextField mnemonicCodeText;
    private javax.swing.JTextField toAddressText;
    // End of variables declaration//GEN-END:variables
}
